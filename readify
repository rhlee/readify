#!/usr/bin/env node

import fs from 'fs';
import path from 'path';

import {JSDOM} from 'jsdom';
import {Readability} from '@mozilla/readability';
import {fileTypeFromFile} from 'file-type';
import sharp from 'sharp';


(async () => {
  const pathHTML = process.argv[2];
  const directory = path.dirname(pathHTML);
  const reader = new Readability
    (new JSDOM(fs.readFileSync(pathHTML, 'utf-8')).window.document);
  const article = reader.parse();
  const model = new JSDOM();
  const document = model.window.document;
  document.querySelector('body').innerHTML = article.content;
  for (const image of document.querySelectorAll("img")) {
    if (!image.src.startsWith("data:")) try {
      const pathImage = path.resolve(directory, decodeURIComponent(image.src));
      const data = fs.readFileSync(pathImage);
      const mime = (await fileTypeFromFile(pathImage)).mime;
      image.src = mime === "image/avif" ?
        "data:image/png;base64,"
          + (await sharp(data).png().toBuffer()).toString('base64')
        : `data:${mime};base64,${data.toString('base64')}`;
    } catch (error) { console.error(error); }
  }
  document.querySelectorAll("source")
    .forEach(source => source.removeAttribute('srcset'));
  fs.writeFileSync(article.title + ".html", model.serialize());
})();
